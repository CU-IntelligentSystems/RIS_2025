cmake_minimum_required(VERSION 3.0.2)
project(White_detection)

# Find catkin packages required for runtime dependencies (good practice even for Python nodes)
# Ensure this list aligns with the <depend> tags in your package.xml
find_package(catkin REQUIRED COMPONENTS
  cv_bridge
  geometry_msgs
  image_geometry
  message_filters
  rospy
  sensor_msgs
  std_msgs # Although not explicitly used in the script, often pulled in by others
  tf2_ros
  tf_conversions
)

# Declare catkin package properties
# For a package containing only Python scripts, this section is often minimal.
catkin_package(
# LIBRARIES # Add C++ libraries generated by this package here
  CATKIN_DEPENDS # List runtime dependencies for other packages using this one's C++ libs/headers
# DEPENDS      # List non-catkin system dependencies
)

# Install Python scripts
# This makes 'rosrun White_detection detection.py' work
catkin_install_python(PROGRAMS
  scripts/line_status_detector.py
  DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

# Install launch files
# This makes launch files in the 'launch/' directory available to 'roslaunch'
install(DIRECTORY launch/
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}/launch
)

# Install config files (if you have any)
# install(DIRECTORY config/
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}/config
# )

# Install message/service/action files (if you define custom ones)
# find_package(catkin REQUIRED COMPONENTS message_generation ...)
# add_message_files(FILES MyMessage.msg ...)
# add_service_files(FILES MyService.srv ...)
# add_action_files(FILES MyAction.action ...)
# generate_messages(DEPENDENCIES std_msgs ...) # Add dependencies needed by messages
# catkin_package(CATKIN_DEPENDS message_runtime ...) # Add message_runtime dependency